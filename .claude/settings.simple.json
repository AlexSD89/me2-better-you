{
  "permissions": {
    "allow": [
      "Bash(claude mcp status)",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "Bash(echo:*)",
      "Bash(pip install:*)",
      "Bash(brew install:*)",
      "Bash(node:*)",
      "Bash(npm update:*)",
      "Bash(git clone:*)",
      "WebFetch(domain:github.com)",
      "WebSearch",
      "Bash(npm install)",
      "Bash(npm test)",
      "WebFetch(domain:docs.tavily.com)",
      "Bash(timeout:*)",
      "Bash(chmod:*)",
      "Bash(npm run verify:*)",
      "Bash(TAVILY_API_KEY=\"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\" node verify.js)",
      "Bash(npm run test:*)",
      "WebFetch(domain:www.superuserstudio.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:userpilot.com)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Task(subagent_type:analyst)",
      "Task(subagent_type:architect)",
      "Task(subagent_type:pm)",
      "Task(subagent_type:po)",
      "Task(subagent_type:sm)",
      "Task(subagent_type:dev)",
      "Task(subagent_type:qa)",
      "Task(subagent_type:general-purpose)",
      "Bash(cat:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__activate_project",
      "mcp__serena__find_file",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__list_dir",
      "Bash(python3:*)",
      "Bash(serena:*)",
      "Bash(pip uninstall:*)",
      "Bash(bash:*)",
      "Bash(grep:*)",
      "Bash(./.claude/hooks/minion-alert-system.sh:*)",
      "Bash(curl:*)",
      "Bash(mv wall-e-progress-dashboard.py project-progress-dashboard.py)",
      "Bash(\".venv/bin/python\" -c \"import sys; print(sys.version); import serena; print(''Serena imported successfully'')\")",
      "Bash(\".venv/bin/python\" -m serena --help)",
      "Bash(python3:*)",
      "mcp__shadcn-ui__list_components",
      "Bash(\".venv/bin/pip\" uninstall serena -y)",
      "Bash(\".venv/bin/pip\" install serena-agent)",
      "Bash(\".venv/bin/python\" --version)",
      "Bash(\".venv/bin/pip\" install -i https://pypi.org/simple/ serena-agent)",
      "Bash(unzip:*)",
      "Bash(mv:*)",
      "Bash(\"../.venv/bin/pip\" install -e .)",
      "Bash(\".venv/bin/python\" -c \"import serena; print(''Serena version:'', getattr(serena, ''__version__'', ''dev'')); print(''Available modules:'', [x for x in dir(serena) if not x.startswith(''_'')])\")",
      "Bash(uv:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(npx tsc:*)",
      "Bash(npm cache clean:*)",
      "Bash(yarn install)",
      "Bash(npx:*)",
      "Bash(pip3 install:*)",
      "WebFetch(domain:www.boardy.ai)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "WebFetch(domain:www.angellist.com)",
      "WebFetch(domain:grata.com)",
      "WebFetch(domain:www.cyndx.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(find:*)",
      "WebFetch(domain:www.folk.app)",
      "WebFetch(domain:towardsdatascience.com)",
      "WebFetch(domain:www.rossul.com)",
      "WebFetch(domain:42dm.net)",
      "WebFetch(domain:www.nected.ai)",
      "WebFetch(domain:customergauge.com)",
      "WebFetch(domain:www.merge.dev)",
      "mcp__serena__think_about_task_adherence",
      "WebFetch(domain:www.upwork.com)",
      "Bash(npm run dev:*)",
      "Bash(open:*)",
      "WebFetch(domain:preview--me2-better-you.lovable.app)",
      "WebFetch(domain:www.reactbits.dev)",
      "WebFetch(domain:www.heroui.com)",
      "WebFetch(domain:vercel.com)",
      "WebFetch(domain:stripe.com)",
      "WebFetch(domain:linear.app)",
      "WebFetch(domain:mp.weixin.qq.com)",
      "WebFetch(domain:dify.ai)",
      "mcp__shadcn-ui__get_component",
      "Bash(npm:*)",
      "Bash(lsof:*)",
      "Bash(pnpm run dev:*)",
      "Bash(pkill:*)",
      "WebFetch(domain:me2-better-you.lovable.app)",
      "Bash(pnpm install:*)",
      "WebFetch(domain:e2b.dev)",
      "mcp__fetch__fetch",
      "WebFetch(domain:juejin.cn)",
      "mcp__shadcn-ui__get_component_demo",
      "WebFetch(domain:reactbits.dev)",
      "WebFetch(domain:mui.com)",
      "WebFetch(domain:material-ui.com)",
      "WebFetch(domain:tweakcn.jnsahaj.dev)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:vuebits.dev)",
      "WebFetch(domain:e2b.dev)",
      "mcp__tavily-search__tavily-search",
      "mcp__tavily-search__tavily-extract",
      "mcp__tavily-search__tavily-crawl",
      "mcp__tavily-search__tavily-map",
      "mcp__workspace-filesystem__read_text_file",
      "mcp__workspace-filesystem__write_file",
      "mcp__workspace-filesystem__edit_file",
      "mcp__workspace-filesystem__list_directory",
      "mcp__workspace-filesystem__search_files",
      "mcp__pocketcorn-data__read_text_file",
      "mcp__pocketcorn-data__write_file",
      "mcp__pocketcorn-data__edit_file",
      "mcp__pocketcorn-data__list_directory",
      "mcp__zhilink-platform__read_text_file",
      "mcp__zhilink-platform__write_file",
      "mcp__zhilink-platform__edit_file",
      "mcp__zhilink-platform__list_directory",
      "mcp__knowledge-base__read_text_file",
      "mcp__knowledge-base__write_file",
      "mcp__knowledge-base__list_directory",
      "mcp__methodology-library__read_text_file",
      "mcp__methodology-library__list_directory",
      "mcp__python-sandbox__run_python",
      "mcp__python-sandbox__install_package",
      "mcp__workspace-filesystem__list_directory",
      "mcp__workspace-filesystem__read_text_file",
      "Bash(.venv/bin/python:*)",
      "Bash(uv pip install:*)",
      "Bash(timeout:*)",
      "Bash(uv run:*)",
      "Bash(uv sync:*)",
      "mcp__tavily__tavily-search",
      "mcp__serena-local__list_dir",
      "mcp__serena-local__find_file",
      "mcp__serena-local__search_for_pattern",
      "mcp__serena-local__get_symbols_overview",
      "mcp__serena-local__find_symbol",
      "mcp__serena-local__activate_project",
      "mcp__serena-local__check_onboarding_performed",
      "mcp__serena-local__think_about_task_adherence",
      "mcp__e2b-code-interpreter__create_sandbox",
      "mcp__e2b-code-interpreter__execute_code",
      "mcp__e2b-code-interpreter__install_packages",
      "mcp__e2b-code-interpreter__upload_file",
      "mcp__e2b-code-interpreter__download_file",
      "mcp__e2b-code-interpreter__list_files",
      "mcp__workspace-filesystem__write_file",
      "mcp__shadcn-ui__list_components",
      "WebFetch(domain:www.reactbits.dev)",
      "mcp__firecrawl__firecrawl_scrape",
      "mcp__shadcn-ui__get_component",
      "mcp__workspace-filesystem__directory_tree",
      "mcp__workspace-filesystem__edit_file",
      "WebFetch(domain:dev.to)",
      "mcp__jina__jina_reader",
      "Bash(python:*)",
      "mcp__workspace-filesystem__create_directory",
      "mcp__workspace-filesystem__move_file",
      "Bash(cd:*)",
      "WebFetch(domain:blog.openai.com)",
      "mcp__firecrawl__firecrawl_search",
      "Bash(test:*)",
      "Bash(gtimeout:*)",
      "Bash(.claude/hooks/knowledge-synthesizer.sh:*)",
      "Bash(.claude/hooks/fixed-knowledge-synthesizer.sh:*)",
      "Bash(for:*)",
      "Bash(do echo \"Testing $hook:\")",
      "Bash(done)",
      "Bash(.claude/hooks/ultimate-intent-processor.sh:*)",
      "Bash(.claude/hooks/intelligent-tool-optimizer.sh:*)",
      "Bash(.claude/hooks/result-analyzer-optimizer.sh:*)",
      "Bash(.claude/hooks/result-analyzer-optimizer-fixed.sh:*)",
      "Bash(./.claude/hooks/intelligent-tool-optimizer.sh:*)",
      "Bash(if jq . \"$file\")",
      "Bash(/dev/null)",
      "Bash(then echo \"✅ Valid\")",
      "Bash(else echo \"❌ Invalid\")",
      "Bash(fi)",
      "Bash(then echo \"✅ Valid JSON\")",
      "Bash(else echo \"❌ Invalid JSON\")",
      "Bash(do echo -n \"Testing $hook: \")",
      "Bash(if cd \"/Users/dangsiyuan/Documents/obsidion/launch x\")",
      "Bash(then echo \"✅ Working\")",
      "Bash(else echo \"❌ Error\")"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/dangsiyuan/Documents/obsidion",
      "/",
      "/usr/local",
      "/opt"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "fetch",
    "firecrawl",
    "jina",
    "hotnews",
    "shadcn-ui",
    "tavily",
    "github",
    "git-mcp",
    "mediacrawler",
    "serena-local",
    "tavily-search",
    "workspace-filesystem",
    "pocketcorn-data",
    "zhilink-platform",
    "knowledge-base",
    "methodology-library",
    "python-sandbox",
    "github-official",
    "git-mcp-local",
    "e2b-code-interpreter"
  ],
  "hooks": {
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "/Users/dangsiyuan/Documents/obsidion/launch x/.claude/hooks/ultimate-intent-processor.sh",
            "timeout": 30
          }
        ]
      }
    ]
  }
}